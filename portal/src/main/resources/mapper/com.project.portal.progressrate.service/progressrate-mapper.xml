<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.project.portal.progressrate.service.ProgressRateMapper">
	
	<select id="selectLectureProgress" resultType="ProgressRateVO">
		  SELECT W.WEEK_NUM,
		       L.LECTURE_TITLE,
               L.LECTURE_CODE,
               SL.STUDENT_ID,
               (SL.WATCH_ACCUM_TIME/(L.LECTURE_ATT_TIME)) * 100 AS LEC_PROGRESS_RATE,
		       L.WEEK_CODE,
               W.WEEK_START_DATE,
               W.WEEK_END_DATE
          FROM COURSE_WEEKLY W JOIN LECTURE L
            ON W.WEEK_CODE = L.WEEK_CODE
             LEFT OUTER JOIN ( SELECT * FROM STUDENT_LECTURE SL WHERE SL.STUDENT_ID = #{studentId}) SL
             ON L.LECTURE_CODE = SL.LECTURE_CODE
           <![CDATA[ WHERE W.COURSE_CODE = #{courseCode} AND W.WEEK_START_DATE < SYSDATE ]]>
         ORDER BY 1 ASC
	</select>
	
	<select id="selectReportProgress" resultType="ProgressRateVO">
		SELECT W.WEEK_NUM,
		       R.REPORT_TITLE,
		       RS.REPORT_SUBMISSION_OPTION,
		       R.REPORT_CODE,
		       R.REPORT_START_DATE,
		       R.REPORT_END_DATE,
               RS.REPORT_SCORE,
               RS.REPORT_FILE_CODE
          FROM COURSE_WEEKLY W LEFT OUTER JOIN REPORT_INFO R
            ON W.WEEK_CODE = R.WEEK_CODE
          LEFT OUTER JOIN REPORT_SUBMISSION RS
            ON R.REPORT_CODE = RS.REPORT_CODE
         WHERE W.COURSE_CODE =#{courseCode} AND RS.STUDENT_ID = #{studentId} AND r.report_end_date > SYSDATE
         ORDER BY 1 ASC
	</select>
	
	<select id="selectReportProgressRate" resultType="ProgressRateVO">
			  SELECT A.WEEK_NUM, A.ATT_OPTION , B.REPORT_RATE
			FROM (
					SELECT  DISTINCT W.WEEK_NUM,
			                SUM(SL.ATT_OPTION) * 100 AS ATT_OPTION
			          FROM  COURSE_WEEKLY W
	                LEFT OUTER JOIN LECTURE L 
	                     ON W.WEEK_CODE = L.WEEK_CODE
                         LEFT OUTER JOIN ( SELECT * FROM STUDENT_LECTURE SL WHERE SL.STUDENT_ID = #{studentId}) SL
	                     ON SL.LECTURE_CODE = L.LECTURE_CODE
	               WHERE W.COURSE_CODE = #{courseCode} 
	               GROUP BY W.WEEK_NUM
                   ORDER BY 1) A,
                (
                  SELECT  CW.WEEK_NUM,
                           (SUM(CASE WHEN RS.REPORT_FILE_CODE IS NOT NULL THEN 1  ELSE 0 END) / COUNT(*)) * 100 REPORT_RATE 
                     FROM COURSE_WEEKLY CW LEFT OUTER JOIN REPORT_INFO RI
                        ON CW.WEEK_CODE = RI.WEEK_CODE
                        LEFT OUTER JOIN REPORT_SUBMISSION RS
                        ON RS.REPORT_CODE = RI.REPORT_CODE
                        WHERE CW.COURSE_CODE = #{courseCode}
                        AND (RS.STUDENT_ID IS NULL OR RS.STUDENT_ID = #{studentId})
                     GROUP BY CW.WEEK_NUM
                     ORDER BY 1) B
                 WHERE A.WEEK_NUM = B.WEEK_NUM      
  			ORDER BY 1 ASC
	
	</select>
	
	<select id="selectAttProgress" resultType="ProgressRateVO">
		 SELECT  DISTINCT W.WEEK_NUM,
			                SUM(SL.ATT_OPTION) * 100 AS ATT_OPTION
			          FROM  COURSE_WEEKLY W
	                LEFT OUTER JOIN LECTURE L 
	                     ON W.WEEK_CODE = L.WEEK_CODE
                         LEFT OUTER JOIN ( SELECT * FROM STUDENT_LECTURE SL WHERE SL.STUDENT_ID = #{studentId}) SL
	                     ON SL.LECTURE_CODE = L.LECTURE_CODE
	               WHERE W.COURSE_CODE = #{courseCode} 
	               GROUP BY W.WEEK_NUM
                   ORDER BY 1
	</select>
	
	<select id="selectMidExamProgress" resultType="ProgressRateVO">
		SELECT E.EXAM_CODE,
		       ES.EXAM_SCORE,
		       E.EXAM_DURATION,
		       E.EXAM_START_DATE,
		       E.EXAM_END_DATE
		  FROM EXAM E JOIN EXAM_SCORE ES
            ON E.EXAM_CODE = ES.EXAM_CODE
         WHERE COURSE_CODE = #{courseCode} AND ES.STUDENT_ID = #{studentId} AND ES.EXAM_CODE LIKE 'M%'
         ORDER BY 1 DESC
	</select>
	
	<select id="selectFinalExamProgress" resultType="ProgressRateVO">
		SELECT E.EXAM_CODE,
		       ES.EXAM_SCORE,
		       E.EXAM_DURATION,
		       E.EXAM_START_DATE,
		       E.EXAM_END_DATE
		  FROM EXAM E JOIN EXAM_SCORE ES
            ON E.EXAM_CODE = ES.EXAM_CODE
         WHERE COURSE_CODE = #{courseCode} AND ES.STUDENT_ID = #{studentId} AND ES.EXAM_CODE LIKE 'F%'
         ORDER BY 1 DESC
	</select>
	
</mapper>