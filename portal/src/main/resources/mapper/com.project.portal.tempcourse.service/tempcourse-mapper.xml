<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.project.portal.tempcourse.service.TempcourseMapper">
<sql id="criteria">
		<where>
		<if test="cri.keyword != null and cri.keyword != ''">
			 ${cri.type} = ${cri.keyword}
		</if>
		</where>
		order by course_code desc
</sql>
	<select id="getInfo" resultType="ProfessorVO">
		select depart_code, professor_id
		from professor where professor_id = #{professorId}

	</select>
	
	

	<select id="tempcourseList"
		resultType="com.project.portal.tempcourse.service.TempcourseVO">

		select t.*,
		       find_code(course_sortation) as course_sortation_name,
		       find_code(submit_yes) as submit_yes_name,
		       find_code(okay_yes) as okay_yes_name
		from temp_course t
		 <!-- where course_code =#{courseCode} -->
		where professor_id = #{vo.professorId}
		
		<if test="cri.keyword != null and cri.keyword != ''">
			and ${cri.type} = ${cri.keyword}
			 
		</if>
		order by course_code desc
		
	</select>

	<select id="tempcourseweekList" resultType="com.project.portal.tempcourse.service.TempcourseweekVO">
		
		select * from temp_course_weekly
	</select>

	<select id="tempcourseListCount" resultType="int">
		select count(*)
		from temp_course
		
	<include refid="criteria"></include>
	</select>

	<select id="getTemp"
		resultType="com.project.portal.tempcourse.service.TempcourseVO">
		<!-- select w.week_num, w.week_content, w.course_code, w.weekCode -->
		<!-- select *
		from temp_course_weekly w
		join temp_course k
		on w.course_code = k.course_code
		where course_code = #{courseCode} -->
		
		select t.*,
		       find_code(course_sortation) as course_sortation_name,
		       find_code(submit_yes) as submit_yes_name,
		       find_code(okay_yes) as okay_yes_name
		from temp_course t
		where course_code = #{courseCode}
	</select>
	
	<select id="getTempweek" resultType="com.project.portal.tempcourse.service.TempcourseweekVO">
		
		select week_code, week_num, week_content, course_code from temp_course_weekly where course_code = #{courseCode}
		order by week_num asc
	
	</select>

	<insert id="tempInsert">
		 <selectKey resultType="string" keyProperty="courseCode"
			order="BEFORE">
			select SUBSTR(CONCAT(c.college_code, d.depart_code), 1,
			4)||LPAD(TO_CHAR(seq_en.nextval), 4, '0') from
			college c join
			department d
			on c.college_code = d.college_code where d.depart_code =
			#{departCode}
		</selectKey>
		
		 insert into temp_course(
		course_name,
		course_code,
		course_sortation,
		course_credit,
		report_assigned_score,
		att_assigned_score,
		midterm_assigned_score,
		final_assigned_score,
		course_limit,
		textbook_reference,
		course_summary,
		course_notes,
		depart_code,
		course_year,
		course_semester,
		professor_id
		
		)
		values(
		#{courseName},
		#{courseCode},
		#{courseSortation},
		#{courseCredit},
		#{reportAssignedScore},
		#{attAssignedScore},
		#{midtermAssignedScore},
		#{finalAssignedScore},
		#{courseLimit},
		#{textbookReference},
		#{courseSummary},
		#{courseNotes},
		#{departCode},
		#{courseYear},
		#{courseSemester},
		#{professorId}
		)  
		
		<!--  merge into temp_course t using dual on (
		
		
		t.course_code = #{courseCode} 
		
		
		) when matched then 
			update  
		   set  t.course_name = #{courseName}, 
				t.course_year = #{courseYear}, 
				t.course_sortation = #{courseSortation},
				t.course_semester = #{courseSemester}, 
				t.course_credit = #{courseCredit},
				t.report_assigned_score = #{reportAssignedScore}, 
				t.midterm_assigned_score= #{midtermAssignedScore},
				t.final_assigned_score = #{finalAssignedScore}, 
				t.course_limit = #{courseLimit},
				t.textbook_reference = #{textbookReference}, 
				t.course_summary = #{courseSummary},
				t.course_notes = #{courseNotes}
		 where  t.course_code = #{courseCode} 
		
		
		when not matched then 

		insert (
		t.course_name,
		t.course_code,
		t.course_sortation,
		t.course_credit,
		t.report_assigned_score,
		t.att_assigned_score,
		t.midterm_assigned_score,
		t.final_assigned_score,
		t.course_limit,
		t.textbook_reference,
		t.course_summary,
		t.course_notes,
		t.depart_code,
		t.course_year,
		t.course_semester,
		t.professor_id
		
		)
		values(
		#{courseName},
		FIND_COURSECODE(#{departCode}),
		#{courseSortation},
		#{courseCredit},
		#{reportAssignedScore},
		#{attAssignedScore},
		#{midtermAssignedScore},
		#{finalAssignedScore},
		#{courseLimit},
		#{textbookReference},
		#{courseSummary},
		#{courseNotes},
		#{departCode},
		#{courseYear},
		#{courseSemester},
		#{professorId}) -->
	
	</insert>

	<insert id="tempweekInsert">


  insert into temp_course_weekly(
		week_num,
		week_content,
		week_code,
		course_code,
		week_start_date,
		week_end_date
		)
select week_num, 
		'', 
		#{courseCode}||LPAD(TO_CHAR(#{weekNum}), 2, '0'),
		#{courseCode}, 
		week_start_date, 
		week_end_date 
 from semester_week
 where week_num=#{weekNum} 
   and course_year=#{courseYear} 
   and course_semester=#{courseSemester}
		

		
		

		 
		
		<!-- <foreach collection="list" item="item" separator=" " open="INSERT ALL" close="SELECT * FROM dual">
		into temp_course_weekly
		(
		week_num,
		week_content,
		week_code,
		course_code
		values
		)
		(
		#{item.weekNum},
		#{item.weekContent},
		#{item.courseCode}||LPAD(TO_CHAR(#{item.weekNum}), 2, '0'),
		#{item.courseCode}
		)
		</foreach> -->
	</insert>
	
	<update id="updateTemp" parameterType="com.project.portal.tempcourse.service.TempcourseVO">
		update  temp_course
		   set  course_name = #{courseName}, 
				course_year = #{courseYear}, 
				course_sortation = #{courseSortation},
				course_semester = #{courseSemester}, 
				course_credit = #{courseCredit},
				report_assigned_score = #{reportAssignedScore}, 
				midterm_assigned_score= #{midtermAssignedScore},
				final_assigned_score = #{finalAssignedScore}, 
				course_limit = #{courseLimit},
				textbook_reference = #{textbookReference}, 
				course_summary = #{courseSummary},
				course_notes = #{courseNotes}
		 where  course_code = #{courseCode}
		
	</update>
	
	<update id="updateweekTemp" parameterType="com.project.portal.tempcourse.service.TempcourseweekVO">
	 <!-- merge into temp_course_weekly w using dual on (
		
		
		w.week_start_date is not null
		
		
		) when matched then

		update 
		set w.week_content = #{weekContent}
		where w.week_code = #{courseCode}||LPAD(TO_CHAR(#{weekNum}), 2, '0') 
		and w.course_code = #{courseCode}
		
		 when not matched then
		
		 insert (
		w.week_num,
		w.week_content,
		w.week_code,
		w.course_code,
		w.week_start_date,
		w.week_end_date
		)
		values
		( 
		#{weekNum},
		#{weekContent},
		#{courseCode}||LPAD(TO_CHAR(#{weekNum}), 2, '0'),
		#{courseCode},
		#{weekStartDate},
		#{weekEndDate}
		)  -->
		
			
		 update temp_course_weekly
		set week_content = #{weekContent}
		where week_code = #{courseCode}||LPAD(TO_CHAR(#{weekNum}), 2, '0') 
		and course_code = #{courseCode}
		 
	
	</update>
	
	 <update id="submitTemp" parameterType="com.project.portal.tempcourse.service.TempcourseVO">
	
		update temp_course
		set submit_yes = #{submitYes}, okay_yes = #{okayYes}, back_reason = #{backReason}
		where course_code = #{courseCode}
	</update> 
	
	<update id="okayTemp" parameterType="com.project.portal.tempcourse.service.TempcourseVO">
	
		 update temp_course
		set back_reason = #{backReason}, okay_yes = #{okayYes}, submit_yes=#{submitYes}
		where course_code = #{courseCode}
	
		
	</update> 
	
	<update id="backTemp" parameterType="com.project.portal.tempcourse.service.TempcourseVO">
	
	update temp_course
		set back_reason = #{backReason}, okay_yes = #{okayYes}, submit_yes=#{submitYes}
		where course_code = #{courseCode}
	
	</update>
	
	<select id="adminTempList"
		resultType="com.project.portal.tempcourse.service.TempcourseVO">

		select t.*,
		       find_code(course_sortation) as course_sortation_name,
		       find_code(submit_yes) as submit_yes_name,
		       find_code(okay_yes) as okay_yes_name
		from temp_course t
		 <!-- where course_code =#{courseCode} -->
		
		
		where submit_yes = 'SUB' and okay_yes = 'A01'
		<if test="cri.keyword != null and cri.keyword != ''">
			and ${cri.type} = ${cri.keyword}
			 
		</if>
	
		
		order by course_code desc
	</select>
	
	<select id="backReasonWhy" resultType="com.project.portal.tempcourse.service.TempcourseVO">
	
	select back_reason from temp_course where course_code = #{courseCode}
	
	</select>
	
	<update id="backReasonInsert" parameterType="TempcourseVO">
	
		update temp_course set back_reason = #{backReason} where course_code = #{courseCode}
	
	</update>
	
	<select id="bringme" resultType="TempcourseVO">
		
		select t.*,
		       find_code(course_sortation) as course_sortation_name,
		       find_code(submit_yes) as submit_yes_name,
		       find_code(okay_yes) as okay_yes_name
		from temp_course t
		 <!-- where course_code =#{courseCode} -->
		where professor_id = #{vo.professorId} and okay_yes = 'A00'
		
		<if test="cri.keyword != null and cri.keyword != ''">
			and ${cri.type} = ${cri.keyword}
			 
		</if>
		order by course_code desc
	
	</select>
	
	<insert id="okayTempCourse" parameterType="TempcourseVO">
	 
	   merge into course c using temp_course t
	   
	   on 
	   (c.course_code = t.course_code) 
	   when matched then 
		update  
		   set  
		c.course_year = t.course_year,
		c.course_semester = t.course_semester,
		c.course_name = t.course_name,
		c.course_sortation = t.course_sortation,
		c.course_credit = t.course_credit,
		c.course_limit = t.course_limit,
		c.professor_id = t.professor_id,
		c.course_summary = t.course_summary,
		c.textbook_reference = t.textbook_reference,
		c.course_notes = t.course_notes,
		c.report_assigned_score = t.report_assigned_score,
		c.midterm_assigned_score = t.midterm_assigned_score,
		c.final_assigned_score = t.final_assigned_score,
		c.att_assigned_score = t.att_assigned_score,
		c.survey_code = t.survey_code,
		c.depart_code = t.depart_code
		 
		
		when not matched then 

		insert (
	 	c.course_code,
		c.course_year,
		c.course_semester,
		c.course_name,
		c.course_sortation,
		c.course_credit,
		c.course_limit,
		c.professor_id,
		c.course_summary,
		c.textbook_reference,
		c.course_notes,
		c.report_assigned_score,
		c.midterm_assigned_score,
		c.final_assigned_score,
		c.att_assigned_score,
		c.survey_code,
		c.depart_code)
		values(
		t.course_code,
		t.course_year,
		t.course_semester,
		t.course_name,
		t.course_sortation,
		t.course_credit,
		t.course_limit,
		t.professor_id,
		t.course_summary,
		t.textbook_reference,
		t.course_notes,
		t.report_assigned_score,
		t.midterm_assigned_score,
		t.final_assigned_score,
		t.att_assigned_score,
		t.survey_code,
		t.depart_code
		)
		
	
	 
	 <!-- insert into course select
	 	course_code,
		course_year,
		course_semester,
		course_name,
		course_sortation,
		course_credit,
		course_limit,
		professor_id,
		course_summary,
		textbook_reference,
		course_notes,
		report_assigned_score,
		midterm_assigned_score,
		final_assigned_score,
		att_assigned_score,
		survey_code,
		depart_code
		
		
	  from temp_course where course_code = #{courseCode} -->
	
	</insert>
	
	<select id="tempcourseweekListList" resultType="com.project.portal.tempcourse.service.TempcourseweekVO">
		<!-- select a.course_code, b.course_year, b.course_semester,b.week_start_date, b.week_end_date, b.week_num
		from temp_course a
		join semester_week b
		on a.course_year = b.course_year
		where a.course_code = #{courseCode} AND b.course_semester = #{courseSemester} -->
		
		select * from semester_week
	</select>
	
	<delete id="tempDelete" parameterType="TempcourseVO">
	
	delete from temp_course where course_code = #{courseCode}	
	</delete>
	
	<insert id="tempInsertWith">
	
	<selectKey resultType="string" keyProperty="courseCode"
			order="AFTER">
			select SUBSTR(CONCAT(c.college_code, d.depart_code), 1,
			4)||LPAD(TO_CHAR(seq_en.nextval), 4, '0') from
			college c join
			department d
			on c.college_code = d.college_code where d.depart_code =
			#{departCode}
		</selectKey>
	 insert into temp_course_weekly(
		week_num,
		week_content,
		week_code,
		course_code,
		week_start_date,
		week_end_date
		)
		values
		( 
		#{weekNum},
		#{weekContent},
		#{courseCode}||LPAD(TO_CHAR(#{weekNum}), 2, '0'),
		#{courseCode},
		#{weekStartDate},
		#{weekEndDate}
		) 
	</insert>

	
</mapper>