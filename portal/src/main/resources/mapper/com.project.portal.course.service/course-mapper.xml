<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.project.portal.course.service.CourseMapper">
	
	
	<resultMap id = "courseWeekMap" type="com.project.portal.course.service.CourseVO">
		<id column="course_code" property="courseCode"/>
		<result column="course_year" property="courseYear"/>
		<result column="course_semester" property="courseSemester"/>
		<result column="course_name" property="courseName"/>
		<collection property="weekPlans" ofType="com.project.portal.course.service.CourseWeeklyVO">
			<id column="week_code" property="weekCode"/>
			<result column="week_num" property="weekNum"/>
			<result column="week_content" property="weekContent"/>
			<result column="week_start_date" property="weekStartDate"/>
			<result column="week_end_date" property="weekEndDate"/>
		</collection>
	</resultMap>
	
	<select id="getWeeklyInfo" resultMap="courseWeekMap">
		SELECT * FROM course_week_plan_vu
		WHERE course_code = #{courseCode}
	</select>
	
	<select id="allCourseList" resultType="com.project.portal.course.service.CourseVO">
		select professor_id, 
				course_year, 
				course_semester, 
				course_sortation, 
				course_name,
				find_code(course_sortation) course_sortation_nm
		from course
		where professor_id = #{professorId}
		order by course_year desc, course_semester desc
	</select>
	
	<select id="getTotal" parameterType="com.project.portal.course.service.CourseVO" resultType="int">
		select count(*)
		from (
				select c.course_code,
				c.course_year,
				c.course_semester,
				c.course_name, 
				c.course_credit, 
				sum(nvl(m.REVIEW_SUB_COUNT,0)) as "REVIEW_SUB_COUNT", 
				sum(m.COUNT_ALL_STUDENT) as "COUNT_ALL_STUDENT",
				nvl(trunc(surveyAvg,1),0) as "SURVEYAVG"
				from course c
				join(select course_code, 
				            case WHEN course_review_yn = 'SUB' THEN count(course_review_yn) end as "REVIEW_SUB_COUNT", 
				            count(student_id) as "COUNT_ALL_STUDENT"
				        from my_course
				        group by course_code, course_review_yn) m
				on c.course_code = m.course_code
				left outer join(select course_code,(avg(survey_A1)+avg(survey_A2)+avg(survey_A3)+avg(survey_A4)+avg(survey_A5)+avg(survey_A6)
				                    +avg(survey_A7)+avg(survey_A8)+avg(survey_A9)+avg(survey_A10))/10 AS surveyAvg
				                    from course_rating
				                    group by course_code) a
				on m.course_code = a.course_code
				where professor_id = #{professorId}
				group by c.course_code, c.course_year, c.course_semester, c.course_name, c.course_credit, SURVEYAVG
				order by c.course_code
		)
		<where>
			<if test="keyword != '' and keyword != null or type != '' and type != null">
				<if test="keyword == ''and type != ''">
					course_semester = #{keyword}	or course_year = #{type}
				</if>
				<if test="keyword != '' and type == ''">
					course_semester = #{keyword}	or course_year = #{type}
				</if>
				<if test="keyword != '' and type != ''">
					course_semester = #{keyword}	and course_year = #{type}
				</if>
			</if>
		</where>
	</select>
	
	<select id="surveyList" resultType="com.project.portal.course.service.CourseVO">
		select c.course_code,
				c.course_year,
				c.course_semester,
				c.course_name, 
				c.course_credit, 
				sum(nvl(m.REVIEW_SUB_COUNT,0)) as "REVIEW_SUB_COUNT", 
				sum(m.COUNT_ALL_STUDENT) as "COUNT_ALL_STUDENT",
				nvl(trunc(surveyAvg,1),0) as "SURVEYAVG"
		from course c
		join(select course_code, 
		            case WHEN course_review_yn = 'SUB' THEN count(course_review_yn) end as "REVIEW_SUB_COUNT", 
		            count(student_id) as "COUNT_ALL_STUDENT"
		        from my_course
		        group by course_code, course_review_yn) m
		on c.course_code = m.course_code
		left outer join(select course_code,(avg(survey_A1)+avg(survey_A2)+avg(survey_A3)+avg(survey_A4)+avg(survey_A5)+avg(survey_A6)
		                    +avg(survey_A7)+avg(survey_A8)+avg(survey_A9)+avg(survey_A10))/10 AS surveyAvg
		                    from course_rating
		                    group by course_code) a
		on m.course_code = a.course_code
		<where>
					professor_id = #{professorId}
			<if test="keyword != '' and keyword != null or type != '' and type != null">
				<if test="keyword == ''and type != ''">
					and course_semester = #{keyword}	or course_year = #{type}
				</if>
				<if test="keyword != '' and type == ''">
					and course_semester = #{keyword}	or course_year = #{type}
				</if>
				<if test="keyword != '' and type != ''">
					and course_semester = #{keyword}	and course_year = #{type}
				</if>
			</if>
		</where>
		group by c.course_code, c.course_year, c.course_semester, c.course_name, c.course_credit, SURVEYAVG
		order by c.course_code
		
	</select>
	
	<select id="surveySelect" resultType="SurveyVO">
        select  r.*, q.*
		from (select  course_code,
		            trunc(avg(r.survey_a1),1) AS A1_AVG,
		            trunc(avg(r.survey_a2),1) AS A2_AVG,
		            trunc(avg(r.survey_a3),1) AS A3_AVG,
		            trunc(avg(r.survey_a4),1) AS A4_AVG,
		            trunc(avg(r.survey_a5),1) AS A5_AVG,
		            trunc(avg(r.survey_a6),1) AS A6_AVG,
		            trunc(avg(r.survey_a7),1) AS A7_AVG,
		            trunc(avg(r.survey_a8),1) AS A8_AVG,
		            trunc(avg(r.survey_a9),1) AS A9_AVG,
		            trunc(avg(r.survey_a10),1) AS A10_AVG
		        from course_rating r
		       where course_code=#{courseCode}
		        group by course_code
		        ) r, 
		    survey_question q
	
	</select>
	
	<select id="getQuestionAvg" resultType="SurveyVO">
		select trunc(avg(survey_a1),1) as "A1_AVG",
				trunc(avg(survey_a2),1) as "A2_AVG",
				trunc(avg(survey_a3),1) as "A3_AVG",
				trunc(avg(survey_a4),1) as "A4_AVG",
				trunc(avg(survey_a5),1) as "A5_AVG",
		        trunc(avg(survey_a6),1) as "A6_AVG",
		        trunc(avg(survey_a7),1) as "A7_AVG",
		        trunc(avg(survey_a8),1) as "A8_AVG",
		        trunc(avg(survey_a9),1) as "A9_AVG",
		        trunc(avg(survey_a10),1) as "A10_AVG"
		from course_rating
		where course_code = #{courseCode}
	</select>
	
	<select id="getCourseAvg" resultType="SurveyVO">
		select trunc(avg(survey_a1),1) as "A1_AVG",
				trunc(avg(survey_a2),1) as "A2_AVG",
				trunc(avg(survey_a3),1) as "A3_AVG",
				trunc(avg(survey_a4),1) as "A4_AVG",
				trunc(avg(survey_a5),1) as "A5_AVG",
        		trunc(avg(survey_a6),1) as "A6_AVG",
        		trunc(avg(survey_a7),1) as "A7_AVG",
        		trunc(avg(survey_a8),1) as "A8_AVG",
        		trunc(avg(survey_a9),1) as "A9_AVG",
        		trunc(avg(survey_a10),1) as "A10_AVG"
		from course_rating
	</select>
	
	<select id="myCourseAvg" resultType="double">
		select 
				trunc(
						(avg(survey_a1)+avg(survey_a2)+avg(survey_a3)+avg(survey_a4)+avg(survey_a5)+
		               	avg(survey_a6)+avg(survey_a7)+avg(survey_a8)+avg(survey_a9)+avg(survey_a10))/10
		       ,1) as "MY_COURSE_AVG"
		from course_rating r
		join course c
		on r.course_code = c.course_code
		where c.course_code = #{courseCode}
		group by c.course_code
	
	</select>
	
	<select id="allMyCourseAvg" resultType="double">
		select trunc(
		                (avg(survey_a1)+avg(survey_a2)+avg(survey_a3)+avg(survey_a4)+avg(survey_a5)+
		               avg(survey_a6)+avg(survey_a7)+avg(survey_a8)+avg(survey_a9)+avg(survey_a10))/10
		       
		       ,1) as "ALL_COURSE_AVG"
		from course_rating r
		join course c
		on r.course_code = c.course_code
	</select>
	
	<select id="getYearSemester" parameterType="BachelorScheduleVO" resultType="CourseVO">
			SELECT MAX(year) as course_year,
						MAX(semester) as course_semester
			FROM bachelor_schedule
			WHERE detail_code = #{detailCode}
	</select>
	
</mapper>