<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.project.portal.report.service.ProfessorReportMapper">
	<select id="getFile" parameterType="String"
		resultType="ReportFileVO">
		SELECT report_file_path
		FROM report_file
		WHERE
		report_file_code = #{reportFileCode}
		AND user_code = #{userCode}
	</select>
	<select id="getProfWholeFile" resultType="ReportFileVO">
		SELECT * FROM (
		SELECT RF.*, ROWNUM R FROM (
		SELECT
		r.report_file_code,
		r.report_file_path,
		r.report_file_name,
		r.user_code,
		r.submit_id,
		re.course_code,
		c.course_year,
		c.course_semester,
		c.course_name
		FROM report_file r JOIN report_info re
		ON r.report_file_code = re.report_file_code
		JOIN course c
		ON re.course_code = c.course_code
		WHERE submit_id = #{file.submitId}
		AND user_code = #{file.userCode}
		ORDER BY c.course_year, c.course_semester DESC
		) RF
		WHERE 
		<if test="cri != null and cri != ''">
			ROWNUM <![CDATA[<=]]> #{cri.pageNum} * #{cri.amount}
		</if>
		)
		<if test="cri != null and cri != ''">
			WHERE R > (#{cri.pageNum} - 1) * #{cri.amount}
		</if> 
	</select>
	<select id="getFileTotal" resultType="int">
		SELECT COUNT(*)
			FROM (SELECT
		r.report_file_code,
		r.report_file_path,
		r.report_file_name,
		r.user_code,
		r.submit_id,
		re.course_code,
		c.course_year,
		c.course_semester,
		c.course_name
		FROM report_file r JOIN report_info re
		ON r.report_file_code = re.report_file_code
		JOIN course c
		ON re.course_code = c.course_code
		WHERE submit_id = #{file.submitId}
		AND user_code = #{file.userCode})
	</select>
	<resultMap id="reportMap" type="ReportVO">
		<id column="report_code" property="reportCode" />
		<result column="week_code" property="weekCode" />
		<result column="report_reg_date" property="reportRegDate" />
		<result column="report_start_date" property="reportStartDate" />
		<result column="report_end_date" property="reportEndDate" />
		<result column="report_title" property="reportTitle" />
		<result column="report_content" property="reportContent" />
		<result column="report_assigned_score"
			property="reportAssignedScore" />
		<result column="report_file_code" property="reportFileCode" />
		<result column="course_code" property="courseCode" />
		<association property="reportFile" javaType="ReportFileVO">
			<id column="report_file_code" property="reportFileCode" />
			<result column="report_file_name" property="reportFileName" />
			<result column="report_file_stored_name"
				property="reportFileStoredName" />
			<result column="report_file_extension"
				property="reportFileExtension" />
			<result column="report_file_path" property="reportFilePath" />
			<result column="user_code" property="userCode" />
			<result column="submit_id" property="submitId" />
		</association>
	</resultMap>
	<select id="getReportList" resultMap="reportMap">
		SELECT * FROM (
		SELECT A.*, ROWNUM r FROM (
		SELECT
			i.report_code,
			i.week_code,
			i.report_reg_date,
			i.report_start_date,
			i.report_end_date,
			i.report_title,
			i.report_content,
			i.report_assigned_score,
			i.report_file_code,
			i.course_code,
			f.report_file_name,
			f.report_file_path,
			f.user_code,
			f.submit_id
			FROM report_info i JOIN report_file f
			ON i.report_file_code = f.report_file_code
			<where>
			<if test="course != null and course != ''">
				AND i.course_code = #{course.courseCode}
			</if>
			<if test="report != null and report != ''">
				AND i.report_code = #{report.reportCode}
			</if>
			<if test="cri != null and cri != ''">
				<if test="cri.keyword != null and cri.keyword != ''">
					AND i.week_code = #{cri.keyword}
				</if>
			</if>
		</where>
		ORDER BY i.week_code DESC) A
		<if test="cri != null and cri != ''">
			<if test="cri.pageNum != null and cri.pageNum != ''">
		WHERE ROWNUM <![CDATA[<=]]> #{cri.pageNum} * #{cri.amount}
			</if>
		</if>)
		<if test="cri != null and cri != ''">
			<if test="cri.pageNum != null and cri.pageNum != ''">
				WHERE R > <![CDATA[(#{cri.pageNum} - 1)]]> * #{cri.amount} 
			</if>
		</if>
		
	</select>
	<select id="getTotal"
		parameterType="com.project.portal.common.Criteria" resultType="int">
		SELECT COUNT(*)
		FROM report_info
		WHERE course_code = #{course.courseCode}
		<if test="cri != null and cri != ''">
			<if test="cri.keyword != null and cri.keyword != ''">
				AND week_code = #{cri.keyword}
			</if>
		</if>
	</select>
	<insert id="uploadFile" parameterType="ReportFileVO">
		INSERT INTO report_file (
		report_file_code,
		report_file_name,
		report_file_stored_name,
		report_file_extension,
		report_file_path,
		user_code,
		submit_id
		)
		VALUES (
		'RPF'||LPAD(TO_CHAR(report_file_seq.NEXTVAL), 17, '0'),
		#{reportFileName},
		#{reportFileStoredName},
		#{reportFileExtension},
		#{reportFilePath},
		#{userCode},
		#{submitId}
		)
		<selectKey keyProperty="reportFileCode" resultType="String"
			order="AFTER">
			SELECT MAX(report_file_code)
			FROM report_file
		</selectKey>
	</insert>
	<insert id="insertReport" parameterType="ReportVO">
		<selectKey keyProperty="reportCode" resultType="String"
			order="BEFORE">
			SELECT #{weekCode}||LPAD(TO_CHAR(report_seq.NEXTVAL), 8, '0')
			FROM dual
		</selectKey>
		INSERT INTO report_info (report_code,
		week_code,
		report_reg_date,
		report_start_date,
		report_end_date,
		report_title,
		report_content,
		report_assigned_score,
		course_code,
		report_file_code
		)
		VALUES (
		#{reportCode},
		#{weekCode},
		SYSDATE,
		#{reportStartDate},
		#{reportEndDate},
		#{reportTitle},
		#{reportContent},
		#{reportAssignedScore},
		#{courseCode},
		#{reportFileCode}
		)
	</insert>
	<select id="getStudentList" resultType="StudentVO">
		SELECT m.student_id, s.student_name
		FROM my_course m JOIN
		student_pri_info s
		ON m.student_id = s.student_id
		<where>
			<if test="report != null and report != ''">
				AND m.course_code = #{report.courseCode}
			</if>
			<if test="submission != null and submission != ''">
				AND m.student_id = #{submission.studentId}
			</if>
		</where>
	</select>
	<insert id="insertStudentSubmission">
		INSERT INTO report_submission (
		report_submission_code,
		report_code,
		student_id,
		report_submission_option
		)
		VALUES (
		'RSUB'||LPAD(TO_CHAR(REPORT_SUB_SEQ.NEXTVAL), 6, '0'),
		#{report.reportCode},
		#{student.studentId},
		'UNSUB'
		)
	</insert>
	<delete id="deleteFile" parameterType="ReportFileVO">
		DELETE FROM report_file
		WHERE report_file_code = #{reportFileCode}
	</delete>
	<update id="updateReport" parameterType="ReportVO">
		UPDATE report_info
		SET
		week_code = #{weekCode},
		report_start_date = #{reportStartDate},
		report_end_date = #{reportEndDate},
		report_title = #{reportTitle},
		report_content = #{reportContent},
		report_assigned_score =
		#{reportAssignedScore},
		report_file_code = #{reportFileCode}
		WHERE
		report_code = #{reportCode}
	</update>
	<select id="getStudentReportList"
		resultType="ReportSubmissionVO">
		SELECT * FROM(
		SELECT A.*, ROWNUM R FROM
		(SELECT
		report_submission_code,
		report_code,
		report_submission_date,
		report_score,
		student_id,
		report_submission_option,
		report_file_code
		FROM
		report_submission
		WHERE report_code IN
		<foreach collection="list" item="item" open="(" separator=","
			close=")">
			#{item.reportCode}
		</foreach>
		ORDER BY report_code DESC) A
		<if test="cri != null and cri != ''">
			<if test="cri.pageNum != null and cri.pageNum != ''">
		WHERE ROWNUM <![CDATA[<=]]> #{cri.pageNum} * #{cri.amount}
			</if>
		</if>)
		<if test="cri != null and cri != ''">
			<if test="cri.pageNum != null and cri.pageNum != ''">
				WHERE R > (#{cri.pageNum} - 1) * #{cri.amount} 
			</if>
		</if>
	</select>
	<delete id="deleteReport">
		DELETE FROM report_info
		WHERE report_code = #{reportCode}
	</delete>
	<select id="getReportTotal" resultType="int">
		SELECT COUNT(*) FROM (
		SELECT
		report_submission_code,
		report_code,
		report_submission_date,
		report_score,
		student_id,
		report_submission_option,
		report_file_code
		FROM
		report_submission
		WHERE report_code IN
		<foreach collection="list" item="item" open="(" separator=","
			close=")">
			#{item.reportCode}
		</foreach>)
	</select>
	<update id="updateScore" parameterType="ReportSubmissionVO">
		UPDATE report_submission
			SET report_score = #{reportScore}
			WHERE report_submission_code = #{reportSubmissionCode}
	</update>
	
	
	<select id="getStudentObjectionList" resultType="ReportObjectionVO">
	select spi.student_id , spi.student_name ,  ri.report_title, cw.week_num, ro.REPORT_SCORE_OBJECTION_APPROVAL_OPTION, RS.REPORT_SUBMISSION_cODE
           from report_score_objection ro join student_study_info si
          ON  ro.student_id = si.student_id
          join student_pri_info spi
          ON spi.student_id = si.student_id
          join report_submission rs
          ON rs.report_submission_code = ro.report_submission_code
          join report_info ri
          ON ri.report_code = rs.report_code
          join course_weekly cw
          ON ri.week_code = cw.week_code
          where ri.course_code = #{courseCode}
	</select>
	
	<select id="getStudentObjectionDetail" resultType="ReportObjectionVO">
		
           SELECT 
           SPI.STUDENT_ID ,
           SPI.STUDENT_NAME , 
           RI.REPORT_TITLE,
           CW.WEEK_NUM,
           RO.REPORT_SCORE_OBJECTION_APPROVAL_OPTION,
           RS.REPORT_SUBMISSION_CODE,
           RO.REPORT_SCORE_OBJECTION_APPLICATION_REASON,
           RS.REPORT_FILE_CODE,
           RF.REPORT_FILE_NAME,
           RF.REPORT_FILE_PATH,
           RF.USER_CODE,
           RS.REPORT_SCORE
           FROM REPORT_SCORE_OBJECTION RO JOIN STUDENT_STUDY_INFO SI
          ON  RO.STUDENT_ID = SI.STUDENT_ID
          JOIN STUDENT_PRI_INFO SPI
          ON SPI.STUDENT_ID = SI.STUDENT_ID
          JOIN REPORT_SUBMISSION RS
          ON RS.REPORT_SUBMISSION_CODE = RO.REPORT_SUBMISSION_CODE
          JOIN REPORT_INFO RI
          ON RI.REPORT_CODE = RS.REPORT_CODE
          JOIN COURSE_WEEKLY CW
          ON RI.WEEK_CODE = CW.WEEK_CODE
          JOIN REPORT_FILE RF
          ON RF.REPORT_FILE_CODE = RS.REPORT_FILE_CODE
          WHERE RI.COURSE_CODE = #{courseCode} AND RS.REPORT_SUBMISSION_CODE= #{reportSubmissionCode}
	</select>
	
	<update id="updateObjection" parameterType="ReportObjectionVO">
		update report_score_objection 
        set REPORT_SCORE_objection_approval_option = 'A02'
        , report_score_objection_rejection_reason = #{reportScoreObjectionRejectionReason}
        where report_submission_code = #{reportSubmissionCode}
	</update>
	
	<update id="updateObjectionScore" parameterType="ReportObjectionVO">
		      update report_submission
		       set report_score = #{reportScore}
          where report_submission_code = #{reportSubmissionCode}
	</update>
	
	
	
	
</mapper>